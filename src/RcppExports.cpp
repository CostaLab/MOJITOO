// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CppMatMult
Eigen::MatrixXd CppMatMult(const Eigen::MatrixXd& m1, const Eigen::MatrixXd& m2);
RcppExport SEXP _MOJITOO_CppMatMult(SEXP m1SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(CppMatMult(m1, m2));
    return rcpp_result_gen;
END_RCPP
}
// CppMatWiseMul
Eigen::MatrixXd CppMatWiseMul(const Eigen::MatrixXd& m1, const Eigen::MatrixXd& m2);
RcppExport SEXP _MOJITOO_CppMatWiseMul(SEXP m1SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(CppMatWiseMul(m1, m2));
    return rcpp_result_gen;
END_RCPP
}
// CppMatWiseDiv
Eigen::MatrixXd CppMatWiseDiv(const Eigen::MatrixXd& m1, const Eigen::MatrixXd& m2);
RcppExport SEXP _MOJITOO_CppMatWiseDiv(SEXP m1SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(CppMatWiseDiv(m1, m2));
    return rcpp_result_gen;
END_RCPP
}
// CppMatAddScalar
Eigen::MatrixXd CppMatAddScalar(const Eigen::MatrixXd& m, double eps);
RcppExport SEXP _MOJITOO_CppMatAddScalar(SEXP mSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(CppMatAddScalar(m, eps));
    return rcpp_result_gen;
END_RCPP
}
// NMF
Eigen::MatrixXd NMF(const Eigen::MatrixXd& W, Eigen::MatrixXd Q, Eigen::MatrixXd S, int n, int nclass, int maxiter, bool display_progress);
RcppExport SEXP _MOJITOO_NMF(SEXP WSEXP, SEXP QSEXP, SEXP SSEXP, SEXP nSEXP, SEXP nclassSEXP, SEXP maxiterSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Q(QSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nclass(nclassSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(NMF(W, Q, S, n, nclass, maxiter, display_progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MOJITOO_CppMatMult", (DL_FUNC) &_MOJITOO_CppMatMult, 2},
    {"_MOJITOO_CppMatWiseMul", (DL_FUNC) &_MOJITOO_CppMatWiseMul, 2},
    {"_MOJITOO_CppMatWiseDiv", (DL_FUNC) &_MOJITOO_CppMatWiseDiv, 2},
    {"_MOJITOO_CppMatAddScalar", (DL_FUNC) &_MOJITOO_CppMatAddScalar, 2},
    {"_MOJITOO_NMF", (DL_FUNC) &_MOJITOO_NMF, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_MOJITOO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
